[{"pos": "epubcfi(/20/2/4/2[book-content]/2[sbo-rt-content]/2/248/1:232)", "pos_type": "epubcfi", "timestamp": "2024-02-01T07:54:52.433878+00:00", "type": "last-read"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/162/1:258", "highlighted_text": "By declaring T as a generic type after impl, Rust can identify that the type in the angle brackets in Point is a generic type rather than a concrete type.", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/162/1:114", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-20T06:56:11.148Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Generic Data Types", "In Method Definitions"], "type": "highlight", "uuid": "aOldF-K4UI2dQ8szhlR-hg"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/360/1:433", "highlighted_text": "T implements the PartialOrd trait", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/360/28/1:0", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T13:08:50.957Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Traits: Defining Shared Behavior", "Using Trait Bounds to Conditionally Implement Methods"], "type": "highlight", "uuid": "Ql4TdgxL9-IhCehoVMhJJA"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/360/1:392", "highlighted_text": "Pair<T> only implements the cmp_display method", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/360/24/1:0", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T13:11:36.072Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Traits: Defining Shared Behavior", "Using Trait Bounds to Conditionally Implement Methods"], "type": "highlight", "uuid": "sLNDcja4TTOzuiGDqKbD4w"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/370/2/1:25", "highlighted_text": "ToString", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/370/2/1:17", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T13:17:44.395Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Traits: Defining Shared Behavior", "Using Trait Bounds to Conditionally Implement Methods"], "type": "highlight", "uuid": "z7EooKEmCRNHs4yVbM9m1w"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/368/1:321", "highlighted_text": "the standard library implements the ToString trait on any type that implements the Display trait.", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/368/1:239", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T13:16:15.563Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Traits: Defining Shared Behavior", "Using Trait Bounds to Conditionally Implement Methods"], "type": "highlight", "uuid": "66hjY30fvWwZ6bjEFuYmHg"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/370/2/1:31", "highlighted_text": "T", "notes": "any type", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/370/2/1:30", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T13:18:07.474Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Traits: Defining Shared Behavior", "Using Trait Bounds to Conditionally Implement Methods"], "type": "highlight", "uuid": "CmI73cDuY3xMkKfPeCS4SQ"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/366/2[listing10-15]:15", "highlighted_text": "Conditionally", "notes": "<> trait bounds", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/366/2[listing10-15]:2", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T13:20:42.675Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Traits: Defining Shared Behavior", "Using Trait Bounds to Conditionally Implement Methods"], "type": "highlight", "uuid": "LEZTKZWflo50tIGhEZ3m8g"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/372/12/1:7", "highlighted_text": " we can turn integers into their corresponding String values like this because integers implement Display", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/372/2[Page_201]:160", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T13:24:46.170Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Traits: Defining Shared Behavior", "Using Trait Bounds to Conditionally Implement Methods"], "type": "highlight", "uuid": "4mOQS4i5t6JTUONq9iVoyA"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/378/1:188", "highlighted_text": "Traits and trait bounds let us write code that uses generic type parameters to reduce duplication but also specify to the compiler that we want the generic type to have particular behavior", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/378/1:0", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T13:25:28.804Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Traits: Defining Shared Behavior", "Using Trait Bounds to Conditionally Implement Methods"], "type": "highlight", "uuid": "niRrnFE3R_3HOqHY6XhkJA"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/378/1:457", "highlighted_text": "if we called a method on a type which didn’t define the method", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/378/1:395", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T13:26:24.324Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Traits: Defining Shared Behavior", "Using Trait Bounds to Conditionally Implement Methods"], "type": "highlight", "uuid": "_b7VFlyFhDgoytf2a5D2hw"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/408/2/2[Page_203]:188", "highlighted_text": "=", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/408/2/2[Page_203]:187", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T16:06:00.204Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "The Borrow Checker"], "type": "highlight", "uuid": "CwiskUmpaWI1nerSdT1NyQ"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/446/2/1:107", "highlighted_text": "&str, y: &str) -> &str", "notes": "This 3 has a relationship, connection. Is returen type loger then other 2 parameter type?", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/446/2/1:85", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T16:38:29.520Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "Generic Lifetimes in Functions"], "type": "highlight", "uuid": "N-0xjybkFkYt6VpZTx6y9A"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/416/2/1:112", "highlighted_text": "&", "notes": "referances tracking", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/416/2/1:111", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T16:40:54.510Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "The Borrow Checker"], "type": "highlight", "uuid": "DUX439rVyXmzDJ0YgS2C6Q"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/500/2/1:191", "highlighted_text": "string1.as_str(), string2.as_str()", "notes": "this 2 parabitare life time doesn't match to return type's life time.", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/500/2/1:157", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T17:21:48.581Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "Lifetime Annotations in Function Signatures"], "type": "highlight", "uuid": "QNqFPwbHvHaebBO95aU1IQ"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/388[h2-503106c10-0012]/2[PreventingDanglingReferenceswithLifetimes]:30", "highlighted_text": "Dangling References", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/388[h2-503106c10-0012]/2[PreventingDanglingReferenceswithLifetimes]:11", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T18:05:08.555Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "Preventing Dangling References with Lifetimes"], "type": "highlight", "uuid": "hmdvWbkd2RFUHqMk1_UvIw"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/390/1:129", "highlighted_text": "which cause a program to reference data other than the data it’s intended to reference.", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/390/1:42", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T18:47:13.172Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "Preventing Dangling References with Lifetimes"], "type": "highlight", "uuid": "gQwPjsPi1uKCtwBA_nrJgQ"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/396/4/4/1:391", "highlighted_text": "Rust indeed does not allow null values", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/396/4/4/1:353", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T18:48:20.061Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "Preventing Dangling References with Lifetimes"], "type": "highlight", "uuid": "XYdgWv5zTqJ_V7YzWNzeLQ"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/392/2/1:20", "highlighted_text": "r", "notes": " its scope is larger", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/392/2/1:19", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T19:02:40.096Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "Preventing Dangling References with Lifetimes"], "type": "highlight", "uuid": "aTHy9g-kMWZ1fXSlXd4TKg"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/392/2/1:55", "highlighted_text": "r", "notes": " its scope is not larger", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/392/2/1:54", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T19:02:53.204Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "Preventing Dangling References with Lifetimes"], "type": "highlight", "uuid": "UhY1VASjgbSZftAhhnWgfA"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/412/18/1:2", "highlighted_text": "sees that r has a lifetime of 'a but that it refers to memory with a lifetime of 'b", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/412/1:219", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T19:31:44.112Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "The Borrow Checker"], "type": "highlight", "uuid": "I9Ij_ij5_Bzug0viER4AvA"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/418/2[listing10-18]:77", "highlighted_text": "longer lifetime than the reference", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/418/2[listing10-18]:43", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T19:34:12.393Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "The Borrow Checker"], "type": "highlight", "uuid": "arvgDkgTpnJdlbJAQrivvA"}, {"removed": true, "timestamp": "2023-10-30T19:36:44.191Z", "type": "highlight", "uuid": "crsvC-f2bYUIL4--YoIoAQ"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/416/2/1:25", "highlighted_text": "5", "notes": "data", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/416/2/1:24", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T19:37:25.470Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "The Borrow Checker"], "type": "highlight", "uuid": "SygxrOGLaRx4yvpl6rxUpQ"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/418/2[listing10-18]:36", "highlighted_text": "data", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/418/2[listing10-18]:32", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T19:37:16.077Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "The Borrow Checker"], "type": "highlight", "uuid": "Bhzl5O9FLvuG6h67T5EAxQ"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/422", "highlighted_text": "Rust knows that the reference in r will always be valid while x is valid.\n\n", "spine_index": 18, "spine_name": "c10.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/420/1:97", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-10-30T21:12:26.161Z", "toc_family_titles": ["Chapter 10: Generic Types, Traits, and Lifetimes", "Validating References with Lifetimes", "The Borrow Checker"], "type": "highlight", "uuid": "CY9RcVLy8gFcMkautl7RoQ"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/12/1:225", "highlighted_text": "We can write tests that assert, for example, that when we pass 3 to the add_two function, the returned value is 5. We can run these tests whenever we make changes to our code to make sure any existing correct behavior has not changed.", "spine_index": 19, "spine_name": "c11.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/12/1:0", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-12-08T13:29:02.757Z", "toc_family_titles": ["Chapter 11: Writing Automated Tests"], "type": "highlight", "uuid": "orSqu6Pvg4u2cLknneA-jw"}, {"end_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/22/1:160", "highlighted_text": "which include the test attribute, a few macros, and the should_panic attribute.", "spine_index": 19, "spine_name": "c11.xhtml", "start_cfi": "/2/4/2[book-content]/2[sbo-rt-content]/2/22/1:97", "style": {"kind": "color", "type": "builtin", "which": "yellow"}, "timestamp": "2023-12-08T11:16:53.526Z", "toc_family_titles": ["Chapter 11: Writing Automated Tests", "How to Write Tests"], "type": "highlight", "uuid": "oz2YrGc0b2N2EOYYZpDFAQ"}]